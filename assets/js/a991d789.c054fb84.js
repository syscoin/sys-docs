"use strict";(self.webpackChunksys_docs=self.webpackChunksys_docs||[]).push([[2555],{57463:(e,t,s)=>{s.d(t,{Z:()=>y});var n=s(87462),a=s(67294),i=s(340),r=s(38456),o=s.n(r),d=s(45822),c=s(89739);const p={code(e){let{node:t,inline:s,className:i,children:r,...o}=e;const p=/language-(\w+)/.exec(i||"");return!s&&p?a.createElement(d.Z,(0,n.Z)({style:c.Z,language:p[1],PreTag:"div",children:String(r).replace(/\n$/,"")},o)):a.createElement("code",(0,n.Z)({className:i},o))}};class u extends a.Component{constructor(e){super(e),this.state={examples:this.props.examples,selectedIndex:0}}render(){return this.state.examples&&this.state.examples.length>0?this.state.examples.length>1?a.createElement(i.mQ,{selectedIndex:this.state.selectedIndex,onSelect:e=>this.setState({selectedIndex:e})},a.createElement(i.td,null,this.state.examples.map(((e,t)=>a.createElement(i.OK,{key:t,label:t},"Example ",t+1)))),this.state.examples.map(((e,t)=>a.createElement(i.x4,{key:t},a.createElement(o(),{components:p,children:e}))))):this.state.examples.map(((e,t)=>a.createElement(o(),{key:t,components:p,children:e}))):null}}const y=u},89262:(e,t,s)=>{s.d(t,{Z:()=>p});var n=s(67294),a=(s(99403),s(65053),s(58650),s(38456)),i=s.n(a);s(66367);class r extends n.Component{constructor(e){super(e),this.state={nodes:this.props.root,tableType:this.props.type,expandedKeys:{}},this.renderParam=this.renderParam.bind(this),this.renderParams=this.renderParams.bind(this),this.getParamElement=this.getParamElement.bind(this)}getParamElement(e){let t=`**\`${e.data.name}\`**`,s="";return" yes"===e.data.required&&(s="Required"),"param"!==this.state.tableType&&"type"!==this.state.tableType&&"return"!==this.state.tableType||!e.data.name?null:n.createElement("li",{class:"li-param"},n.createElement("div",{class:"flex short"},n.createElement(i(),{class:"md-type",children:t}),n.createElement("p",{class:"required"},s)))}renderParam(e){let t=`${e.data.type}`;return e.children?n.createElement("div",{class:"md-type"},this.getParamElement(e),n.createElement("ul",{class:"ul-param"},n.createElement("li",{class:"li-param"},n.createElement("details",{class:"short-spacing"},n.createElement("summary",null,n.createElement("div",null,n.createElement(i(),{class:"md-type",children:t}),n.createElement(i(),{class:"md-type",children:e.data.description}))),this.renderParams(e.children))))):n.createElement("div",{class:"md-type"},this.getParamElement(e),n.createElement("ul",{class:"ul-param"},n.createElement("li",{class:"li-param"},n.createElement("div",{class:"short-spacing"},n.createElement(i(),{class:"md-type",children:t}),n.createElement(i(),{class:"md-type",children:e.data.description})))))}renderParams(e){return n.createElement("ul",{class:"ul-param md-type"},e.map((e=>this.renderParam(e))))}render(){return null!=this.state.nodes?n.createElement("div",null,this.renderParams(this.state.nodes)):null}}const o=r;var d=s(57463);class c extends n.Component{constructor(e){super(e),this.state={showInfo:!1,paramTable:this.props.paramTable,returnTable:this.props.returnTable,typeTable:this.props.typeTable,examples:this.props.examples,anchor:this.props.anchor,showTitles:this.props.showTitles,buttonShowText:"\u1405"},this.checkLocationHash=this.checkLocationHash.bind(this),this.renderParams=this.renderParams.bind(this),this.renderReturns=this.renderReturns.bind(this),this.renderExamples=this.renderExamples.bind(this),this.renderTypes=this.renderTypes.bind(this),this.renderTable=this.renderTable.bind(this),this.toggleButton=this.toggleButton.bind(this)}componentDidMount(){void 0!==this.state.anchor&&this.checkLocationHash()}checkLocationHash(){"undefined"!=typeof location&&this.state.hash!==location.hash&&(location.hash==this.props.anchor?this.setState({showInfo:!0,hash:location.hash,buttonShowText:"\u1401"}):this.setState({hash:location.hash}))}componentDidUpdate(){void 0!==this.state.anchor&&this.checkLocationHash()}renderTable(e,t,s){return!1!==this.state.showTitles?n.createElement("div",null,n.createElement("h4",null,t),n.createElement(o,{root:s,type:e})):n.createElement(o,{root:s,type:e})}renderParams(){return void 0!==this.state.paramTable?this.renderTable("param","Parameters",this.state.paramTable):null}renderReturns(){return void 0!==this.state.returnTable?this.renderTable("return","Returns",this.state.returnTable):null}renderTypes(){return void 0!==this.state.typeTable?this.renderTable("type","Types",this.state.typeTable):null}renderExamples(){return void 0!==this.state.examples?!1!==this.state.showTitles?n.createElement("div",null,n.createElement("h4",null,"Examples"),n.createElement(d.Z,{examples:this.state.examples})):n.createElement(d.Z,{examples:this.state.examples}):null}toggleButton(){this.setState({showInfo:!this.state.showInfo}),this.state.showInfo?this.state.buttonShowText="\u1405":this.state.buttonShowText="\u1401"}render(){return this.state.showInfo?n.createElement("div",null,n.createElement("button",{class:"toggle-button",onClick:()=>this.toggleButton()},this.state.buttonShowText),this.renderParams(),this.renderReturns(),this.renderExamples(),this.renderTypes()):n.createElement("div",null,n.createElement("button",{class:"toggle-button",onClick:()=>this.toggleButton()},this.state.buttonShowText))}}const p=c},48551:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function assetBurnToEth () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetOpts = { ethaddress: Buffer.from('07C72973d42D28de80D47Eb1F8Bc4a8ee0D5bBb1', 'hex') }\n  // in reality this would be a known asset (SYSX)\n  const assetGuid = '1965866356'\n  // burn 1 satoshi (not COINS)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = 'tsys1q7zewkwya3je369vyzq5l5e83mrvdqwzgvv9nzg'\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(1), address: 'tsys1quexf5zalfak2cvv9mujkh9pc3f3wrcgz7gzhh5' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = 'tsys1q7zewkwya3je369vyzq5l5e83mrvdqwzgvv9nzg'\n  const sysFromXpubOrAddress = 'vpub5ZdpZuCU7ubDRZ5V7uryBDBEZxDNP67FLgPyHgPtiVgjwDk8rjxAFbg4cHNAyp9ZLXNgJRq6f9QjWCc4Ef7gUxFivP7GkSKo6ANNb2jrzhA'\n  const psbt = await syscoinjs.assetAllocationBurn(assetOpts, txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}\n"},10988:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function assetBurnToSys () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  // empty ethaddress means burning SYSX to SYS, otherwise its burning asset to goto Etheruem\n  const assetOpts = { ethaddress: Buffer.from('') }\n  // in reality this would be a known asset (SYSX)\n  const assetGuid = '3372068234'\n  // burn 1 satoshi (not COINS)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(1), address: 'tsys1qdflre2yd37qtpqe2ykuhwandlhq04r2td2t9ae' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetAllocationBurn(assetOpts, txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}\n"},80585:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function assetMintToSys () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetOpts = {\n    bridgetransferid: 2,\n    blocknumber: 6816449,\n    txvalue: Buffer.from('f9012b82051f843b9aca008307a120940765efb302d504751c652c5b1d65e8e9edf2e70f80b8c454c988ff00000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000009be8894b0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002c62637274317130667265323430737939326d716b386b6b377073616561366b74366d3537323570377964636a00000000000000000000000000000000000000002ca0dccb6e077c3f6252d199202113893407119d4ba09667113f2d20c63a31487b87a01e0a059e50f08f2772781691f2c9e43a9503a167c98cf467b1afc177b74d84e6', 'hex'),\n    txroot: Buffer.from('a0842ab40a9c4770c8ec74158aadcf943e8158128fdd1ba8cef9c7cb8eda732692', 'hex'),\n    txparentnodes: Buffer.from('f9039cf871a04442f3f69add48df0531fe3c0025103b53fcf3fe38060e5f29366caec8855e4fa0229f7b7e69c0b5793f8a61c06f5cc09b0f4938561856c632ee56c3b2c4d6d153808080808080a07720fff5e8eabef55fa129ee55b3b0d82875e2b25b8f26e22cf6b5c4f9cec7ab8080808080808080f901f180a03ee147749c5b769bc5d1a53e4f37567506d417de4ec4e67722130eda4638427da043caa62b40dad61bce4d50fb62ea485729a6687c3aa13895cf4ba234b92afe82a0b79958e4aa63104da4599ebb91e712375e6adfc89abc14b9533c5778f107e7d8a01bc7f80f81a8d281253ac882bb89aca6131e5794bfcbdccde990bb6d5be6cb2fa0aedad62f1426b68e395a59e06bf242fb28b882af67589bce3495a99650058ec4a0c21a7e0b9d0948bb6b65a5e73f5f01173064d20e4819ca4884d1eabc22bf737da090087708c533b10af8925eebf398c005fc16cb6a515111f2be4f328f762949d0a02827daacd6a52ae6c74a78791ff0c5e33a7a85f5ca0a47cdfbcd5219f75f705ca0af7ecf31d56575155d272cd813bf7d7ac435f62b0538c31771e407dafef6be53a09b74707c3abdbfa305cb61f23c940f063f553f17d0bd3013126aad357193353ea067a52ed59820bb48f8010d2b2bb0ee92803b1a00a8341fd4c3269b065ed070d9a0bf0e9b45955283e6e04b71eda63bfc7b55d9f54527943aa1c159b4161b1e1daea0ecabd4c00deacf9a7ff25be942c9f468628eb776fbec23a9ca0d8fc256f14a31a0df406c7ac7f38c2ea1d9bdb06c2e51db3de8cf0e655a8e0e683e19ca1ddf83d3a08360ec6c5e26614f144520ed9d0b577640381f0f38b5429b67422f75d603ad5a80f9013220b9012ef9012b82051f843b9aca008307a120940765efb302d504751c652c5b1d65e8e9edf2e70f80b8c454c988ff00000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000009be8894b0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002c62637274317130667265323430737939326d716b386b6b377073616561366b74366d3537323570377964636a00000000000000000000000000000000000000002ca0dccb6e077c3f6252d199202113893407119d4ba09667113f2d20c63a31487b87a01e0a059e50f08f2772781691f2c9e43a9503a167c98cf467b1afc177b74d84e6', 'hex'),\n    txpath: Buffer.from('0b', 'hex'),\n    receiptvalue: Buffer.from('f902e00183192ee2bf901d5f89b94f2bb7bfa19e7c4b6bb333ee1afdf8e5e8f9b3561f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a00000000000000000000000000765efb302d504751c652c5b1d65e8e9edf2e70fa000000000000000000000000000000000000000000000000000000002540be400f89b94f2bb7bfa19e7c4b6bb333ee1afdf8e5e8f9b3561f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a00000000000000000000000000765efb302d504751c652c5b1d65e8e9edf2e70fa00000000000000000000000000000000000000000000000000000000000000000f899940765efb302d504751c652c5b1d65e8e9edf2e70fe1a09c6dea23fe3b510bb5d170df49dc74e387692eaa3258c691918cd3aa94f5fb74b860000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c14405300000000000000000000000000000000000000000000000000000002540be4000000000000000000000000000000000000000000000000000000080800000002', 'hex'),\n    receiptroot: Buffer.from('a0a958499bf48fcce17672b58aa9037bd3dafeb6231880722d909c60bacfaaa8d4', 'hex'),\n    receiptparentnodes: Buffer.from('f90551f871a0cab13def05783d763febde31920bd234d0486c26955c2937e0486db909a28eeea09cf564a668a29a5f1cc5d6ef8e19988dfd2b30d290672f0ffc4200e608cb65ac808080808080a029b8ed2258c53562954c87bcd7f60671029680d2a19ef8bcd3ad470ea48d57d18080808080808080f901f180a07c21ca39872e6b8f611bc6b1b295c24f988b5cf944625eabf5236b37ea3b9f01a0edb9e63fdc31ba41f11a8b2fb8000ad1357b3c0b27a8483968d75e93e7b488a1a02231847aa3c5dde2f2a1851a66aabec65e5eaae8c28110756f122c72be1fba05a08fa87809e5b7f989e78ccbe1a6bc4924115d5747529af879f2fe196f959b64fca091f1bf748061eba21a413b72d70afccb8daebb5906d5cd9dda06d5f877065d5ba0d7e6c82dd1c25eb2f90b02f038beaff98c260d46992d0b3c1eac7d51552c7417a01d5c43deb2e3794292cdffb04f82ab25bc4e75f5e0cab928b66582e08026f5b1a0d7323a87dc8fbc66c7b34810d2cad92fc0da168d962b4556e825a3266a148b74a0af31f0b7cdcd6a855ac7678ef2b8fcb1afeda918b0c8e4696a4013f2b75ca402a0f9d63f2db8ab6d3c3e12073ac2910ee575832bde3e4586f18e59dd26a16adb7ca0f0c91e059c43780617d304fe8992511f096ccc35232da1f25127db53ba4fb05aa052030932d0a9026efd2a3ada67f33d401cd9a97ddb24c606af3a0a0c24e432aba0142af9b4686c6ca30b0ac39133fa76d8682b7bbbec488e62e652d3f25419777da0940f31617e91cfbabaa9d0d1638949f8125f80a43027122778522675194a4e65a0edc4c7d2cf30150fdf7e502d0ef06c80c85fc37260134a112493c6183f62f4b580f902e720b902e3f902e00183192ee2bf901d5f89b94f2bb7bfa19e7c4b6bb333ee1afdf8e5e8f9b3561f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a00000000000000000000000000765efb302d504751c652c5b1d65e8e9edf2e70fa000000000000000000000000000000000000000000000000000000002540be400f89b94f2bb7bfa19e7c4b6bb333ee1afdf8e5e8f9b3561f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a00000000000000000000000000765efb302d504751c652c5b1d65e8e9edf2e70fa00000000000000000000000000000000000000000000000000000000000000000f899940765efb302d504751c652c5b1d65e8e9edf2e70fe1a09c6dea23fe3b510bb5d170df49dc74e387692eaa3258c691918cd3aa94f5fb74b860000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c14405300000000000000000000000000000000000000000000000000000002540be4000000000000000000000000000000000000000000000000000000080800000002', 'hex')\n  }\n  // asset and address being minted to from Eth to Sys\n  const mintAddress = 'tsys1qdflre2yd37qtpqe2ykuhwandlhq04r2td2t9ae'\n  const assetGuid = '2615707979'\n  // mint 100 COINS\n  const amountToMint = new sjs.utils.BN(10000000000)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: amountToMint, address: mintAddress }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetAllocationMint(assetOpts, txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},96163:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\n// pass just Eth txid and let Syscoin get proof to create transaction\nasync function assetMintToSys () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  // infura URL + ID and ethereum burn txid\n  const assetOpts = {\n    infuraurl: '<YOUR INFURA URL>',\n    ethtxid: '0x3c3bfe141fcbe313f2afd31be1b63dd3a0147235161e637407fbb8605d3d294f'\n  }\n  // will be auto filled based on ethtxid eth-proof\n  const assetMap = null\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetAllocationMint(assetOpts, txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},39900:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function issueAsset () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetGuid = '3813460941'\n  // mint 11000 satoshi (not COINS)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(6000), address: 'tsys1qpay7ehn7epk5dmh8xv7dn5ksvyhr06323mtz0s' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetSend(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},89872:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function issueAssetNFT () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetGuid = '2264781424'\n  const NFTID = sjs.utils.createAssetID('1', assetGuid)\n  // mint 1000 satoshi (not COINS)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(1000), address: 'tsys1qdflre2yd37qtpqe2ykuhwandlhq04r2td2t9ae' }] }],\n    [NFTID, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(1), address: 'tsys1qdflre2yd37qtpqe2ykuhwandlhq04r2td2t9ae' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetSend(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},61610:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function issueAssetNFT () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetGuid = '2441957158'\n  const NFTID = sjs.utils.createAssetID('1', assetGuid)\n  // mint 1000 satoshi (not COINS)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [NFTID, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(1), address: 'tsys1qdflre2yd37qtpqe2ykuhwandlhq04r2td2t9ae' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetSend(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},90449:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\nconst syscointx = require('syscointx-js')\n\nasync function newAsset () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: false }\n  const assetOpts = { precision: 8, symbol: 'JAG', maxsupply: new sjs.utils.BN(100000000000), description: 'publicvalue' }\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  // let HDSigner find asset destination address\n  const sysReceivingAddress = null\n  const psbt = await syscoinjs.assetNew(assetOpts, txOpts, sysChangeAddress, sysReceivingAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n    return\n  }\n  const assets = syscointx.getAssetsFromTx(psbt.extractTransaction())\n  console.log('created asset ' + assets.keys().next().value)\n}"},98510:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function sendSys () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: false }\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const outputsArr = [\n    { address: 'tsys1quas925cuqmlkc0082442uh68efv3hdazknmjpd', value: new sjs.utils.BN(10000000) }\n  ]\n  const psbt = await syscoinjs.createTransaction(txOpts, sysChangeAddress, outputsArr, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},75408:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function sendSysMemo () {\n  const feeRate = new sjs.utils.BN(10)\n  const memo = Buffer.from('Gas station order id: 606c80d6cc793f13d2f0d424. Asset GUID 341906151')\n  const memoHeader = Buffer.from([0xfe, 0xfe, 0xaf, 0xaf, 0xaf, 0xaf])\n  const txOpts = { rbf: true, memo: memo, memoHeader: memoHeader, assetWhiteList: new Map([['341906151', {}]]) }\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = 'tsys1qnykk8e2e6wuufaz0lcdlry05fq5sj3uzczra3p'\n  const outputsArr = [\n    { address: 'tsys1q0hxdj9r3tyxmr66tehdhhl35l5rk4ucanteuh6', value: new sjs.utils.BN(3158692) }\n  ]\n  const result = await syscoinjs.createTransaction(txOpts, sysChangeAddress, outputsArr, feeRate, 'tsys1qnykk8e2e6wuufaz0lcdlry05fq5sj3uzczra3p')\n  if (!result) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n  const psbt = await syscoinjs.signAndSendWithWIF(result.psbt, 'cQh85hzaUMQDCneQvuwEvKFS418gzHfaQ9MmKj9pCd8aKgRNaEDr', result.assets)\n  const memoExtracted = sjs.utils.getMemoFromOpReturn(psbt.txOutputs, memoHeader)\n  console.log('memo extracted from transaction ' + memoExtracted.toString())\n}"},81099:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function sysBurnToAsset () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  // asset and address being minted to from Eth to Sys\n  const mintAddress = 'tsys1qdflre2yd37qtpqe2ykuhwandlhq04r2td2t9ae'\n  const assetGuid = '3372068234'\n  // mint 10 COINS\n  const amountToMint = new sjs.utils.BN(1000000000)\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: amountToMint, address: mintAddress }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.syscoinBurnToAssetAllocation(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},35964:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function transferAsset () {\n  const feeRate = new sjs.utils.BN(10)\n  // set to false for ZDAG, true disables it but it is replaceable by bumping the fee\n  const txOpts = { rbf: false }\n  const assetguid = '3813460941'\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(500), address: 'tsys1qgkyez6kz2l2qkr5zmjmwx0rwkrkylf2p09lyd4' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},40770:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function transferAssetFundedByAddress () {\n  const feeRate = new sjs.utils.BN(10)\n  // set to false for ZDAG, true disables it but it is replaceable by bumping the fee\n  const txOpts = { rbf: true }\n  const assetguid = '2201781193'\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(1000000), address: 'tsys1qk0mrytgd06tc4rdtcs7h6nvx9ph67rjavv7qx6' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const result = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate, 'tsys1qd2wejyl606fratchj0emvwcl78p67wq4x9cy4w')\n  if (!result) {\n    console.log('Could not create transaction, not enough funds?')\n    return\n  }\n  await syscoinjs.signAndSendWithWIF(result.res, 'cSRej8siHpwEKN9Mzh8s7WFwFenhb2my5dnyWK8pH1jUwonCvEdP', result.assets)\n}"},5235:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function transferAssetFundedByMultiHDSigners () {\n  const mnemonic1 = 'bicycle lucky earn primary wasp ranch dinner gravity property tenant gospel nephew soul cruise tool'\n  const Signer1 = new sjs.utils.HDSigner(mnemonic1, null, true)\n  const feeRate = new sjs.utils.BN(10)\n  // set to false for ZDAG, true disables it but it is replaceable by bumping the fee\n  const txOpts = { rbf: true }\n  const assetguid = '3813460941'\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(6000), address: 'tsys1qfqq6fg6jacruta85xysa4hzc00y9c0numedhh8' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const sysFromXpubOrAddress = [HDSigner.getAccountXpub(), Signer1.getAccountXpub()]\n  const result = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress)\n  if (!result) {\n    console.log('Could not create transaction, not enough funds?')\n    return\n  }\n  // this should sign one of the inputs with HDSigner\n  let psbt = await syscoinjs.signAndSend(result.psbt, result.assets)\n  // this should sign the other input with Signer1, and then notarize, signing one input with Signer1 again\n  const psbt1 = await syscoinjs.signAndSend(psbt, result.assets, Signer1)\n  // this should finalize the transaction from HDSigner signing (this time notarized) and send it to network\n  psbt = await syscoinjs.signAndSend(psbt1, result.assets)\n}"},61127:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function transferAssetFundedByXpub () {\n  const feeRate = new sjs.utils.BN(10)\n  // set to false for ZDAG, true disables it but it is replaceable by bumping the fee\n  const txOpts = { rbf: true }\n  const assetguid = '341906151'\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(100000), address: 'tsys1qk0mrytgd06tc4rdtcs7h6nvx9ph67rjavv7qx6' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const result = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate, 'vpub5ZnEznWQvUgz3caxxZVnfnxkHkDstTFrsdSi9zQAf48ozc4a1XdfaAY6eBgKigm4NxykfcFh7d3oBwMHqKzzGo2jKET8AbypuuffvbBwAwH')\n  if (!result) {\n    console.log('Could not create transaction, not enough funds?')\n    return\n  }\n  await syscoinjs.signAndSend(result.res, result.assets)\n}"},5852:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function transferAssetWithMemo () {\n  const feeRate = new sjs.utils.BN(10)\n  // data carrying memo field added to opreturn commitment\n  const memo = Buffer.from('a7bf215279d3f6568dcd17c429d41a35a466f803', 'hex')\n  const memoHeader = Buffer.from([0xfe, 0xfe, 0xaf, 0xaf, 0xaf, 0xaf])\n  // set to false for ZDAG, true disables it but it is replaceable by bumping the fee\n  const txOpts = { rbf: true, memo: memo, memoHeader: memoHeader }\n  const assetguid = '341906151'\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  const assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(5), address: 'tsys1qk0mrytgd06tc4rdtcs7h6nvx9ph67rjavv7qx6' }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n  const memoExtracted = sjs.utils.getMemoFromOpReturn(psbt.txOutputs, memoHeader)\n  console.log('memo extracted from transaction ' + memoExtracted.toString('hex'))\n}"},54545:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function updateAsset () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetGuid = '2125509931'\n  // update capability flags, update description and update eth smart contract address\n  const assetOpts = { updatecapabilityflags: '123', contract: Buffer.from('2b1e58b979e4b2d72d8bca5bb4646ccc032ddbfc', 'hex'), description: 'new publicvalue' }\n  // send asset back to ourselves as well as any change\n  const assetChangeAddress = null\n  // send change back to ourselves as well as recipient to ourselves\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(0), address: assetChangeAddress }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetUpdate(assetGuid, assetOpts, txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},98741:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\n\nasync function updateAssetAuxFees () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetGuid = '2229676993'\n  const scalarPct = 1000\n  // the aux fee keyPair\n  const keyPair = HDSigner.createKeypair(0)\n  // get the p2wpkh payment so we can get the keyid (payment.hash)\n  const payment = sjs.utils.bitcoinjs.payments.p2wpkh({\n    pubkey: keyPair.publicKey,\n    network: HDSigner.Signer.network\n  })\n  const auxFeeKeyID = Buffer.from(payment.hash.toString('hex'), 'hex')\n  // setup the auxfee table\n  const auxFees = [\n    {\n      bound: new sjs.utils.BN(0),\n      percent: 1 * scalarPct\n    },\n    {\n      bound: new sjs.utils.BN(10 * syscointx.utils.COIN),\n      percent: 0.4 * scalarPct\n    },\n    {\n      bound: new sjs.utils.BN(250 * syscointx.utils.COIN),\n      percent: 0.2 * scalarPct\n    },\n    {\n      bound: new sjs.utils.BN(2500 * syscointx.utils.COIN),\n      percent: 0.07 * scalarPct\n    },\n    {\n      bound: new sjs.utils.BN(25000 * syscointx.utils.COIN),\n      percent: 0.007 * scalarPct\n    },\n    {\n      bound: new sjs.utils.BN(250000 * syscointx.utils.COIN),\n      percent: 0\n    }\n  ]\n  // update auxfee details\n  const assetOpts = { auxfeedetails: { auxfeekeyid: auxFeeKeyID, auxfees: auxFees } }\n  // send asset back to ourselves as well as any change\n  const assetChangeAddress = null\n  // send change back to ourselves as well as recipient to ourselves\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(0), address: assetChangeAddress }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetUpdate(assetGuid, assetOpts, txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},5160:(e,t,s)=>{s.d(t,{Z:()=>n});const n="```js\nconst mnemonic = 'air leader stone antenna first shrug panic before nut sport bench keen'\n// blockbook URL\nconst backendURL = 'https://sys-explorer.tk/' // if using localhost you don't need SSL see use 'systemctl edit --full blockbook-syscoin.service' to remove SSL from blockbook\nconst sjs = require('syscoinjs-lib')\n// 'null' for no password encryption for local storage and 'true' for testnet\nconst HDSigner = new sjs.utils.HDSigner(mnemonic, null, true)\nconst syscoinjs = new sjs.Syscoin(HDSigner, backendURL)\nconst syscointx = require('syscointx-js')\n\nasync function updateAssetNotary () {\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  const assetGuid = '2039276165'\n  // the notary keyPair\n  const keyPair = HDSigner.createKeypair(0)\n  // get the p2wpkh payment so we can get the keyid (payment.hash)\n  const payment = sjs.utils.bitcoinjs.payments.p2wpkh({\n    pubkey: keyPair.publicKey,\n    network: HDSigner.Signer.network\n  })\n  // the notary key and the details can be updated independently but we will update both here\n  const notaryKeyID = Buffer.from(payment.hash.toString('hex'), 'hex')\n  const notaryDetails =\n  {\n    // endpoint must be encoded in utf8 using Buffer.from (default) because it should encode as bytes represented by base64 string (encodeToBase64)\n    endpoint: Buffer.from(syscointx.utils.encodeToBase64('https://test12.com')),\n    instanttransfers: true,\n    hdrequired: false\n  }\n  // update auxfee details\n  const assetOpts = { notarykeyid: notaryKeyID,  notarydetails: notaryDetails }\n  // send asset back to ourselves as well as any change\n  const assetChangeAddress = null\n  // send change back to ourselves as well as recipient to ourselves\n  const assetMap = new Map([\n    [assetGuid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(0), address: assetChangeAddress }] }]\n  ])\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const psbt = await syscoinjs.assetUpdate(assetGuid, assetOpts, txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n}"},99752:(e,t,s)=>{s.d(t,{Bt:()=>n,dV:()=>a,gv:()=>i,gz:()=>r,zi:()=>o,pX:()=>d,ZJ:()=>c,Z1:()=>p,Vc:()=>u,Zc:()=>y,pt:()=>f,cf:()=>l,r_:()=>_,j5:()=>m,qp:()=>k,LV:()=>h,qO:()=>b,bG:()=>g,Fo:()=>v,VO:()=>S,JX:()=>j,Ys:()=>w,rK:()=>x,B$:()=>N,t4:()=>A,h$:()=>O,f2:()=>T,tD:()=>B,x6:()=>I,ri:()=>U,pR:()=>q,kG:()=>P,MP:()=>D,OK:()=>R,IM:()=>H,WO:()=>X,II:()=>C,vu:()=>M,R5:()=>L,S7:()=>V,KF:()=>J,s9:()=>z,lX:()=>G,Gu:()=>E,lV:()=>F,Zm:()=>W,Kg:()=>K,WC:()=>Z,D_:()=>Y,X9:()=>Q,Jf:()=>$,_X:()=>ee,E2:()=>te,Pk:()=>se,z0:()=>ne,VB:()=>ae,AI:()=>ie,sY:()=>re,vo:()=>oe,lG:()=>de,wX:()=>ce,oT:()=>pe,oi:()=>ue,d9:()=>ye,$E:()=>fe,e6:()=>le,Be:()=>_e,e4:()=>me,MC:()=>ke,s:()=>he,DO:()=>be,vd:()=>ge,B9:()=>ve,j9:()=>Se,GX:()=>je,Mb:()=>we,AG:()=>xe,eL:()=>Ne,qA:()=>Ae,zT:()=>Oe,i8:()=>Te,y5:()=>Be,p1:()=>Ie,x2:()=>Ue,XN:()=>qe,Yl:()=>Pe,OR:()=>De,ge:()=>Re,i0:()=>He,x3:()=>Xe,vl:()=>Ce,M9:()=>Me,GN:()=>Le,Nv:()=>Ve,hY:()=>Je,iN:()=>ze,kf:()=>Ge,CH:()=>Ee,M2:()=>Fe,Nt:()=>We,tf:()=>Ke,M6:()=>Ze,K9:()=>Ye,TV:()=>Qe,ZN:()=>$e,Ue:()=>et,mD:()=>tt,XZ:()=>st,nu:()=>nt,W$:()=>at,hC:()=>it,In:()=>rt,pc:()=>ot,dW:()=>dt,ju:()=>ct,En:()=>pt,BP:()=>ut,no:()=>yt,Xx:()=>ft,vZ:()=>lt,ig:()=>_t,PQ:()=>mt,BH:()=>kt,mT:()=>ht,eB:()=>bt,Rf:()=>gt,jK:()=>vt,FJ:()=>St,Ry:()=>jt,y2:()=>wt,ic:()=>xt});const n=JSON.parse('[{"key":"0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]'),a=JSON.parse('[{"key":"0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]'),i=JSON.parse('[{"key":"0","data":{"name":" precision","type":" _Number_","description":" Digits precision for this asset. Range is 0 to 8"}},{"key":"1","data":{"name":" symbol","type":" _String_","description":" Symbol up to 8 characters in length in ASCII"}},{"key":"2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum satoshis for supply. Range is 1 to 1 quintillion (10^18)"}},{"key":"3","data":{"name":" description","type":" _String_","description":" Description in ASCII describing token. The description will be encoded via JSON in the pubdata field for the asset and will be in the &#39;desc&#39; field of the JSON object"}},{"key":"4","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"5","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Defaults to 127 or ALL capabilities. Update capabilities on this asset. Read more  [  _here_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#updatecapabilityflags)"}},{"key":"6","data":{"name":" notarykeyid","type":" _String_","description":" Notary KeyID, the hash160 of the address used for notarization. Should be P2WPKH"}},{"key":"7","data":{"name":" notarydetails","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Details related to the notarization of transactions using this asset"},"children":[{"key":"7-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"7-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"7-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]},{"key":"8","data":{"name":" auxFeeDetails","type":" [  _AuxFeeDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfeedetails)","description":" Enforce auxiliary fees to every transaction on this asset"},"children":[{"key":"8-0","data":{"name":" auxfeekeyid","type":" _String_","description":" AuxFee KeyID, the hash160 of the address used where fees are paid out to. Should be P2WPKH"}},{"key":"8-1","data":{"name":" auxfees","type":" [  _AuxFee_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfee) _Array_","description":" Details of the auxiliary fees that must be paid for each transaction"},"children":[{"key":"8-1-0","data":{"name":" bound","type":" _BN_","description":" Lower bound from which the given auxiliary fee percentage begins"}},{"key":"8-1-1","data":{"name":" percent","type":" _Number_","description":" Percentage fee that must be paid when a transaction&#39;s value is above the given bound (percentages are cumulative)"}}]}]}]'),r=JSON.parse('[{"key":"0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]'),o=JSON.parse('[{"key":"0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]'),d=JSON.parse('[{"key":"0","data":{"name":" bound","type":" _BN_","description":" Lower bound from which the given auxiliary fee percentage begins"}},{"key":"1","data":{"name":" percent","type":" _Number_","description":" Percentage fee that must be paid when a transaction&#39;s value is above the given bound (percentages are cumulative)"}}]'),c=JSON.parse('[{"key":"0","data":{"name":" auxfeekeyid","type":" _String_","description":" AuxFee KeyID, the hash160 of the address used where fees are paid out to. Should be P2WPKH"}},{"key":"1","data":{"name":" auxfees","type":" [  _AuxFee_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfee) _Array_","description":" Details of the auxiliary fees that must be paid for each transaction"},"children":[{"key":"1-0","data":{"name":" bound","type":" _BN_","description":" Lower bound from which the given auxiliary fee percentage begins"}},{"key":"1-1","data":{"name":" percent","type":" _Number_","description":" Percentage fee that must be paid when a transaction&#39;s value is above the given bound (percentages are cumulative)"}}]}]'),p=JSON.parse('[{"key":"0","data":{"name":" \\\\_\\\\_D","type":" _Buffer_","description":""}},{"key":"1","data":{"name":" \\\\_\\\\_Q","type":" _Buffer_","description":""}},{"key":"2","data":{"name":" chainCode","type":" _Buffer_","description":""}},{"key":"3","data":{"name":" network","type":" [  Network ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":""}},{"key":"4","data":{"name":" \\\\_\\\\_DEPTH","type":" _Number_","description":""}},{"key":"5","data":{"name":" \\\\_\\\\_INDEX","type":" _Number_","description":""}},{"key":"6","data":{"name":" \\\\_\\\\_PARENT\\\\_FINGERPRINT","type":" _Number_","description":""}},{"key":"7","data":{"type":" lowR","description":" _Boolean_"}}]'),u=JSON.parse('[{"key":"0","data":{"name":" mnemonic","type":" _String_","description":" 12 word, Bip32 seed phrase","required":" yes"}},{"key":"1","data":{"name":" password","type":" _String_","description":" Encryption password for local storage on web clients","required":" no"}},{"key":"2","data":{"name":" isTestnet","type":" _Boolean_","description":" If using testnet set this to true","required":" no"}},{"key":"3","data":{"name":" networks","type":" [  _Networks_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#networks)","description":" Defaults to Syscoin network. Bitcoinjs-lib network settings for coin being used","required":" no"},"children":[{"key":"3-0","data":{"name":" mainnet","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" [  Network ](#network)  object to be used for mainnet"},"children":[{"key":"3-1-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"3-1-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"3-1-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"3-1-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"3-1-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"3-1-5","data":{"type":" wif","description":" ` Hex`"}}]},{"key":"3-1","data":{"name":" testnet","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" [  Network ](#network)  object to be used for testnet"},"children":[{"key":"3-1-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"3-1-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"3-1-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"3-1-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"3-1-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"3-1-5","data":{"type":" wif","description":" ` Hex`"}}]}]},{"key":"4","data":{"name":" SLIP44","type":" _Number_","description":" SLIP44 value for the coin, see:  [  SLIP44 Values ](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)","required":" no"}},{"key":"5","data":{"name":" pubTypes","type":" _String_","description":" Defaults to Syscoin ZPub/VPub types. Specific ZPub for BIP84 and VPub for testnet","required":" no"}}]'),y=JSON.parse('[{"key":"0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"5","data":{"type":" wif","description":" ` Hex`"}}]'),f=JSON.parse('[{"key":"0","data":{"name":" mainnet","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" [  Network ](#network)  object to be used for mainnet"},"children":[{"key":"1-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"1-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"1-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"1-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"1-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"1-5","data":{"type":" wif","description":" ` Hex`"}}]},{"key":"1","data":{"name":" testnet","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" [  Network ](#network)  object to be used for testnet"},"children":[{"key":"1-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"1-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"1-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"1-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"1-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"1-5","data":{"type":" wif","description":" ` Hex`"}}]}]'),l=JSON.parse('[{"key":"0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]'),_=JSON.parse('[{"key":"0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"4","data":{"type":" script","description":" _Buffer_"}}]'),m=JSON.parse('[{"key":"0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"2","data":{"type":" globalMap","description":" ` Object`"}}]'),k=JSON.parse('[{"key":"0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]'),h=JSON.parse('[{"key":"0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"2-4","data":{"type":" script","description":" _Buffer_"}}]}]'),b=JSON.parse('[{"key":"0","data":{"name":" type","type":" _String_","description":""}},{"key":"1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"3","data":{"name":" path","type":" _String_","description":""}},{"key":"4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]'),g=JSON.parse('[{"key":"0","data":{"name":" data","type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" Bitcoin PSBT object"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),v=JSON.parse('[{"key":"0","data":{"name":" contract","type":" _Buffer_","description":" Hex buffer with the ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"1","data":{"name":" pubdata","type":" _Buffer_","description":" Hex buffer with the public data information of the token"}},{"key":"2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum supply in sats"}},{"key":"3","data":{"name":" precision","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"4","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Update capabilities on this asset"}}]'),S=JSON.parse('[{"key":"0","data":{"name":" type","type":" _String_","description":""}},{"key":"1","data":{"name":" address","type":" _String_","description":""}},{"key":"2","data":{"name":" txId","type":" _String_","description":""}},{"key":"3","data":{"name":" path","type":" _String_","description":""}},{"key":"4","data":{"name":" vout","type":" _Number_","description":""}},{"key":"5","data":{"name":" value","type":" _BN_","description":""}},{"key":"6","data":{"name":" locktime","type":"","description":""}},{"key":"7","data":{"type":" assetInfo","description":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)"},"children":[{"key":"7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]'),j=JSON.parse('[{"key":"0","data":{"name":" utxos","type":" [  _SanitizedUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedutxo) _Array_","description":""},"children":[{"key":"0-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1","data":{"name":" address","type":" _String_","description":""}},{"key":"0-2","data":{"name":" txId","type":" _String_","description":""}},{"key":"0-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-4","data":{"name":" vout","type":" _Number_","description":""}},{"key":"0-5","data":{"name":" value","type":" _BN_","description":""}},{"key":"0-6","data":{"name":" locktime","type":"","description":""}},{"key":"0-7","data":{"type":" assetInfo","description":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)"},"children":[{"key":"0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"1","data":{"name":" assets","type":" [  _SanitizedAssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedassetdetails) _Map_","description":" Mapped from asset GUIDs to  [  _SanitizedAssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedassetdetails)  objects."},"children":[{"key":"1-0","data":{"name":" contract","type":" _Buffer_","description":" Hex buffer with the ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"1-1","data":{"name":" pubdata","type":" _Buffer_","description":" Hex buffer with the public data information of the token"}},{"key":"1-2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum supply in sats"}},{"key":"1-3","data":{"name":" precision","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"1-4","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Update capabilities on this asset"}}]}]'),w=JSON.parse('[{"key":"0","data":{"name":" Signer","type":" [  _Signer_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#Signer)","description":" If letting Syscoin manage  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  keys you would want to use an  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer) . With  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  assigned, signing will happen automatically when creating raw transactions","required":" no"}},{"key":"1","data":{"name":" blockbookURL","type":" _String_","description":" A back-end blockbook URL that will provide UTXO and required information to sign. User can always provide their own list of UTXOs in the same format as blockbook using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)  to sanitize the UTXO data to acceptable internal format","required":" no"}},{"key":"2","data":{"name":" network","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" The blockchain network and bip32 settings. The utils file has some examples including Bitcoin and Syscoin, it will default to Syscoin.","required":" no"},"children":[{"key":"2-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"2-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"2-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"2-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"2-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"2-5","data":{"type":" wif","description":" ` Hex`"}}]}]'),x=JSON.parse('[{"key":"0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]'),N=JSON.parse('[{"key":"0","data":{"name":" password","type":" _String_","description":" Encryption password for local storage on web clients","required":" no"}},{"key":"1","data":{"name":" isTestnet","type":" _Boolean_","description":" If using testnet set this to true","required":" no"}},{"key":"2","data":{"name":" networks","type":" [  _Networks_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#networks)","description":" Defaults to Syscoin network. Bitcoinjs-lib network settings for coin being used","required":" no"},"children":[{"key":"2-0","data":{"name":" mainnet","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" [  Network ](#network)  object to be used for mainnet"},"children":[{"key":"2-1-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"2-1-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"2-1-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"2-1-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"2-1-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"2-1-5","data":{"type":" wif","description":" ` Hex`"}}]},{"key":"2-1","data":{"name":" testnet","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" [  Network ](#network)  object to be used for testnet"},"children":[{"key":"2-1-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"2-1-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"2-1-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"2-1-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"2-1-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"2-1-5","data":{"type":" wif","description":" ` Hex`"}}]}]},{"key":"3","data":{"name":" SLIP44","type":" _Number_","description":" SLIP44 value for the coin, see:  [  SLIP44 Values ](https://github.com/satoshilabs/slips/blob/master/slip-0044.md)","required":" no"}},{"key":"4","data":{"name":" pubTypes","type":" _String_","description":" Defaults to Syscoin ZPub/VPub types. Specific ZPub for BIP84 and VPub for testnet","required":" no"}},{"key":"5","data":{"name":" connectSrc","type":" _String_","description":" URL source to connect to","required":" no"}},{"key":"6","data":{"name":" disableLazyLoad","type":" _Boolean_","description":" Prevents iframe injection until TrezorConnect.method is be called","required":" no"}}]'),A=JSON.parse('[{"key":"0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"6","data":{"name":" path","type":" _String_","description":""}},{"key":"7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]'),O=JSON.parse('[{"key":"0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]'),T=JSON.parse('[{"key":"0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"1","data":{"type":" value","description":" _Buffer_"}}]'),B=JSON.parse('[{"key":"0","data":{"name":" 0","type":"","description":" No flags enabled"}},{"key":"1","data":{"name":" 1","type":"","description":" Ability to update public data field"}},{"key":"2","data":{"name":" 2","type":"","description":" Ability to update smart contract field"}},{"key":"3","data":{"name":" 4","type":"","description":" Ability to issue or distribute supply via  [  assetsend ](#assetSend)"}},{"key":"4","data":{"name":" 8","type":"","description":" Ability to update notary address"}},{"key":"5","data":{"name":" 16","type":"","description":" Ability to update notary details"}},{"key":"6","data":{"name":" 32","type":"","description":" Ability to update aux fees"}},{"key":"7","data":{"name":" 64","type":"","description":" Ability to update capability flags"}},{"key":"8","data":{"name":" 127","type":"","description":" All flags enabled"}}]'),I=JSON.parse('[{"key":"0","data":{"name":" assetOpts","type":" [  _AssetOptionsBurn_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoptionsBurn)","description":" Asset details","required":" no"},"children":[{"key":"0-0","data":{"name":" ethaddress","type":" _String_","description":" If burning for purpose of sending over SysEthereum bridge specify the destination Ethereum address where tokens should be sent to on Ethereum"}}]},{"key":"1","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"1-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"1-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"1-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"1-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"2","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs","required":" yes"},"children":[{"key":"2-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"2-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"2-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"2-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"3","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"4","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"5","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"6","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"6-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"6-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"6-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"6-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"6-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"6-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"6-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"6-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"6-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"6-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"6-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"6-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"6-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"6-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"6-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"6-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"6-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"6-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"6-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"6-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"6-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"6-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"7","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),U=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),q=JSON.parse('[{"key":"0","data":{"name":" assetOpts","type":" [  _AssetOptionsMint_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoptionsmint)","description":" Asset details","required":" no"},"children":[{"key":"0-0","data":{"name":" ethtxid","type":" _String_","description":" The transaction that calls freezeBurnERC20() on ERC20Manager contract"}},{"key":"0-1","data":{"name":" web3url","type":" _String_","description":" If using eth-proof fully qualified Web3 HTTP-RPC URL that eth-proof needs to obtain the transaction proof and receipt proof information needed by Syscoin to validate the mint"}},{"key":"0-2","data":{"name":" blocknumber","type":" _Buffer_","description":" If ethtxid/web3url not provided. Block number of transaction including freezeBurnERC20() call"}},{"key":"0-3","data":{"name":" txvalue","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the transaction hex encoded in RLP format"}},{"key":"0-4","data":{"name":" txroot","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the transaction merkle root encoded in RLP format"}},{"key":"0-5","data":{"name":" txparentnodes","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the transaction merkle proof encoded in RLP format"}},{"key":"0-6","data":{"name":" txpath","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the merkle path for the transaction and receipt proof"}},{"key":"0-7","data":{"name":" receiptvalue","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the transaction receipt hex encoded in RLP format"}},{"key":"0-8","data":{"name":" receiptroot","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the receipt merkle root encoded in RLP format"}},{"key":"0-9","data":{"name":" receiptparentnodes","type":" _Buffer_","description":" If ethtxid/web3url not provided. Buffer value of the receipt merkle proof encoded in RLP format"}}]},{"key":"1","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"1-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"1-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"1-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"1-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"2","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs","required":" yes"},"children":[{"key":"2-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"2-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"2-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"2-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"3","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"4","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"5","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"6","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"6-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"6-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"6-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"6-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"6-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"6-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"6-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"6-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"6-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"6-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"6-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"6-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"6-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"6-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"6-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"6-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"6-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"6-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"6-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"6-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"6-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"6-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"7","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),P=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),D=JSON.parse('[{"key":"0","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"0-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"0-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"0-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"0-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"1","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs","required":" yes"},"children":[{"key":"1-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"1-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"1-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"1-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"2","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"3","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"4","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"5","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"5-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"5-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"5-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"5-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"5-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"5-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"5-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"5-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"5-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"5-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"5-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"5-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"5-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"5-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"5-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"5-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"5-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"5-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"5-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"5-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"6","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),R=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),H=JSON.parse('[{"key":"0","data":{"name":" assetOpts","type":" [  _AssetOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoptions)","description":" Asset details","required":" yes"},"children":[{"key":"0-0","data":{"name":" precision","type":" _Number_","description":" Digits precision for this asset. Range is 0 to 8"}},{"key":"0-1","data":{"name":" symbol","type":" _String_","description":" Symbol up to 8 characters in length in ASCII"}},{"key":"0-2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum satoshis for supply. Range is 1 to 1 quintillion (10^18)"}},{"key":"0-3","data":{"name":" description","type":" _String_","description":" Description in ASCII describing token. The description will be encoded via JSON in the pubdata field for the asset and will be in the &#39;desc&#39; field of the JSON object"}},{"key":"0-4","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"0-5","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Defaults to 127 or ALL capabilities. Update capabilities on this asset. Read more  [  _here_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#updatecapabilityflags)"}},{"key":"0-6","data":{"name":" notarykeyid","type":" _String_","description":" Notary KeyID, the hash160 of the address used for notarization. Should be P2WPKH"}},{"key":"0-7","data":{"name":" notarydetails","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Details related to the notarization of transactions using this asset"},"children":[{"key":"0-7-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"0-7-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"0-7-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]},{"key":"0-8","data":{"name":" auxFeeDetails","type":" [  _AuxFeeDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfeedetails)","description":" Enforce auxiliary fees to every transaction on this asset"},"children":[{"key":"0-8-0","data":{"name":" auxfeekeyid","type":" _String_","description":" AuxFee KeyID, the hash160 of the address used where fees are paid out to. Should be P2WPKH"}},{"key":"0-8-1","data":{"name":" auxfees","type":" [  _AuxFee_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfee) _Array_","description":" Details of the auxiliary fees that must be paid for each transaction"},"children":[{"key":"0-8-1-0","data":{"name":" bound","type":" _BN_","description":" Lower bound from which the given auxiliary fee percentage begins"}},{"key":"0-8-1-1","data":{"name":" percent","type":" _Number_","description":" Percentage fee that must be paid when a transaction&#39;s value is above the given bound (percentages are cumulative)"}}]}]}]},{"key":"1","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"1-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"1-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"1-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"1-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"2","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"3","data":{"name":" sysReceivingAddress","type":" _String_","description":" Address which will hold the new asset. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new receiving address will be automatically created using the next available receiving address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"4","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"5","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"6","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"6-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"6-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"6-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"6-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"6-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"6-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"6-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"6-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"6-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"6-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"6-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"6-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"6-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"6-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"6-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"6-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"6-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"6-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"6-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"6-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"6-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"6-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]}]'),X=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),C=JSON.parse('[{"key":"0","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"0-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"0-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"0-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"0-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"1","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs","required":" yes"},"children":[{"key":"1-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"1-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"1-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"1-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"2","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"3","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"4","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"5","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"5-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"5-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"5-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"5-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"5-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"5-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"5-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"5-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"5-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"5-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"5-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"5-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"5-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"5-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"5-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"5-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"5-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"5-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"5-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"5-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"6","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),M=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),L=JSON.parse('[{"key":"0","data":{"name":" assetGuid","type":" _String_","description":" Asset GUID to update","required":" yes"}},{"key":"1","data":{"name":" assetOpts","type":" [  _AssetOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoptions)","description":" Asset details","required":" yes"},"children":[{"key":"1-0","data":{"name":" precision","type":" _Number_","description":" Digits precision for this asset. Range is 0 to 8"}},{"key":"1-1","data":{"name":" symbol","type":" _String_","description":" Symbol up to 8 characters in length in ASCII"}},{"key":"1-2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum satoshis for supply. Range is 1 to 1 quintillion (10^18)"}},{"key":"1-3","data":{"name":" description","type":" _String_","description":" Description in ASCII describing token. The description will be encoded via JSON in the pubdata field for the asset and will be in the &#39;desc&#39; field of the JSON object"}},{"key":"1-4","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"1-5","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Defaults to 127 or ALL capabilities. Update capabilities on this asset. Read more  [  _here_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#updatecapabilityflags)"}},{"key":"1-6","data":{"name":" notarykeyid","type":" _String_","description":" Notary KeyID, the hash160 of the address used for notarization. Should be P2WPKH"}},{"key":"1-7","data":{"name":" notarydetails","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Details related to the notarization of transactions using this asset"},"children":[{"key":"1-7-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"1-7-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"1-7-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]},{"key":"1-8","data":{"name":" auxFeeDetails","type":" [  _AuxFeeDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfeedetails)","description":" Enforce auxiliary fees to every transaction on this asset"},"children":[{"key":"1-8-0","data":{"name":" auxfeekeyid","type":" _String_","description":" AuxFee KeyID, the hash160 of the address used where fees are paid out to. Should be P2WPKH"}},{"key":"1-8-1","data":{"name":" auxfees","type":" [  _AuxFee_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#auxfee) _Array_","description":" Details of the auxiliary fees that must be paid for each transaction"},"children":[{"key":"1-8-1-0","data":{"name":" bound","type":" _BN_","description":" Lower bound from which the given auxiliary fee percentage begins"}},{"key":"1-8-1-1","data":{"name":" percent","type":" _Number_","description":" Percentage fee that must be paid when a transaction&#39;s value is above the given bound (percentages are cumulative)"}}]}]}]},{"key":"2","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"2-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"2-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"2-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"2-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"3","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs","required":" yes"},"children":[{"key":"3-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"3-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"3-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"3-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"4","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"5","data":{"name":" sysReceivingAddress","type":" _String_","description":" Address which will hold the new asset. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new receiving address will be automatically created using the next available receiving address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"6","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"7","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"8","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"8-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"8-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"8-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"8-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"8-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"8-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"8-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"8-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"8-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"8-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"8-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"8-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"8-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"8-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"8-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"8-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"8-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"8-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"8-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"8-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"8-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"8-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"9","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),V=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),J=JSON.parse('[{"key":"0","data":{"name":" assetInfo","type":" ` Object`","description":" Object containing infuraurl and ethtxid fields populated","required":" yes"}}]'),z=JSON.parse('[{"key":"0","data":{"type":" [  _SPVProof_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#spvproof)","description":" SPV proof object"}}]'),G=JSON.parse('[{"key":"0","data":{"name":" psbt","type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" Partially signed transaction object","required":" yes"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]},{"key":"1","data":{"name":" pathIn","type":" _String_","description":" Custom HD BIP32 path useful if signing from a specific address like a multisig","required":" no"}}]'),E=JSON.parse('[{"key":"0","data":{"name":" trezorTx","type":" [  _TrezorTransaction_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#trezortransaction)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  in the format of a  [  TrezorTransaction ](/docs/dev-resources/documentation/javascript-sdk-ref/types#trezortransaction)"},"children":[{"key":"0-0","data":{"name":" coin","type":" _String_","description":" Denotes the coin being used in the transaction"}},{"key":"0-1","data":{"name":" version","type":" ???????","description":""}},{"key":"0-2","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":""},"children":[{"key":"0-2-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-2-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-2-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-2-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-2-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-2-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-2-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-3","data":{"type":" outputs","description":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_"}}]}]'),F=JSON.parse('[{"key":"0","data":{"type":" _Number_","description":" The account index of the new account"}}]'),W=JSON.parse('[{"key":"0","data":{"name":" NFTID","type":" _Number_","description":" The desired NFT ID for the child asset","required":" yes"}},{"key":"1","data":{"name":" assetGuid","type":" _Number_","description":" The assetGuid of the base asset","required":" yes"}}]'),K=JSON.parse('[{"key":"0","data":{"type":" _Number_","description":" Returns the GUID for a child asset with the given NFT ID"}}]'),Z=JSON.parse('[{"key":"0","data":{"name":" addressIndex","type":" _Number_","description":" [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  address index","required":" yes"}},{"key":"1","data":{"name":" isChange","type":" _Boolean_","description":" [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  change marker","required":" yes"}}]'),Y=JSON.parse('[{"key":"0","data":{"type":" [  _KeyPair_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#keypair)","description":" The bitcoinjs-lib key pair derived from the address index and change marker"}}]'),Q=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]},{"key":"1","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),$=JSON.parse('[{"key":"0","data":{"name":" psbt","type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  from bitcoinjs-lib"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),ee=JSON.parse('[{"key":"0","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" yes"},"children":[{"key":"0-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"0-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"0-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"0-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"1","data":{"name":" changeAddress","type":" _String_","description":" Change address if defined is where change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" yes"}},{"key":"2","data":{"name":" outputsArr","type":" ` Object`","description":" Output array defining tuples to which addresses to send coins to and how much","required":" yes"}},{"key":"3","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"4","data":{"name":" fromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"5","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"5-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"5-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"5-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"5-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"5-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"5-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"5-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"5-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"5-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"5-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"5-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"5-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"5-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"5-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"5-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"5-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"5-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"5-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"5-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"5-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"6","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),te=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),se=JSON.parse('[{"key":"0","data":{"name":" index","type":" _Number_","description":" Account number to derive","required":" yes"}}]'),ne=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" Private key for the account specified by the account index"}}]'),ae=JSON.parse('[{"key":"0","data":{"name":" keypath","type":" _String_","description":" BIP32  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  of key desired based on internal seed and network","required":" yes"}}]'),ie=JSON.parse('[{"key":"0","data":{"type":" [  _KeyPair_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#keypair)","description":" A bitcoinjs-lib key pair"}}]'),re=JSON.parse('[{"key":"0","data":{"name":" keypath","type":" _String_","description":" BIP32  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  of the key desired based on internal seed and network","required":" yes"}}]'),oe=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" A bitcoinjs-lib public key"}}]'),de=JSON.parse('[{"key":"0","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" yes"},"children":[{"key":"0-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"0-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"0-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"0-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"0-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"0-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"0-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"0-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"0-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"0-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"0-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"0-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"0-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"0-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"0-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"0-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"0-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"0-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"1","data":{"name":" fromXpubOrAddress","type":" _String_","description":" If wanting to fund from specific  [  xPUBs ](https://learnmeabitcoin.com/technical/extended-keys#:~:text=An%20extended%20key%20is%20a,in%20a%20hierarchical%20deterministic%20wallet.&text=In%20addition%2C%20a%20corresponding%20extended,the%20same%20child%20public%20keys%20.)  or addresses this field should be set. Can be an array of  [  xPUBs ](https://learnmeabitcoin.com/technical/extended-keys#:~:text=An%20extended%20key%20is%20a,in%20a%20hierarchical%20deterministic%20wallet.&text=In%20addition%2C%20a%20corresponding%20extended,the%20same%20child%20public%20keys%20.)  or addresses in combination","required":" no"}},{"key":"2","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"2-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"2-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"2-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"2-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"3","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs (For asset transactions only)","required":" no"},"children":[{"key":"3-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"3-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"3-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"3-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"4","data":{"name":" excludeZeroConf","type":" _Boolean_","description":" False by default. Filtering out 0 conf UTXO, new/update/send asset transactions must use confirmed inputs only, as per Syscoin Core mempool policy","required":" no"}}]'),ce=JSON.parse('[{"key":"0","data":{"type":" [  _SanitizedUTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedutxos)","description":" Sanitized UTXO object array in JSON."},"children":[{"key":"0-0","data":{"name":" utxos","type":" [  _SanitizedUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedutxo) _Array_","description":""},"children":[{"key":"0-0-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-0-1","data":{"name":" address","type":" _String_","description":""}},{"key":"0-0-2","data":{"name":" txId","type":" _String_","description":""}},{"key":"0-0-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-0-4","data":{"name":" vout","type":" _Number_","description":""}},{"key":"0-0-5","data":{"name":" value","type":" _BN_","description":""}},{"key":"0-0-6","data":{"name":" locktime","type":"","description":""}},{"key":"0-0-7","data":{"type":" assetInfo","description":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)"},"children":[{"key":"0-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-1","data":{"name":" assets","type":" [  _SanitizedAssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedassetdetails) _Map_","description":" Mapped from asset GUIDs to  [  _SanitizedAssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedassetdetails)  objects."},"children":[{"key":"0-1-0","data":{"name":" contract","type":" _Buffer_","description":" Hex buffer with the ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"0-1-1","data":{"name":" pubdata","type":" _Buffer_","description":" Hex buffer with the public data information of the token"}},{"key":"0-1-2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum supply in sats"}},{"key":"0-1-3","data":{"name":" precision","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"0-1-4","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Update capabilities on this asset"}}]}]}]'),pe=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for","required":" yes"}},{"key":"2","data":{"name":" options","type":" ` Object`","description":" Optional queries based on  [  https://github.com/syscoin/blockbook/blob/master/docs/api.md#get-xpub ](https://github.com/syscoin/blockbook/blob/master/docs/api.md#get-xpub)","required":""}},{"key":"3","data":{"name":" xpub","type":" _Boolean_","description":" If addressOrXpub is an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  set to true","required":""}},{"key":"4","data":{"name":" Signer","type":" [  _Signer_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#Signer)","description":" [  _Signer_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#Signer)  object if you wish to update change/receiving indexes from backend provider (and XPUB token information is provided in response)"}}]'),ue=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" The account object in JSON"}}]'),ye=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" assetGuid","type":" _Number_","description":" GUID of the token/asset to fetch","required":" yes"}}]'),fe=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" The asset information in JSON"}}]'),le=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" blockhash","type":" _String_","description":" Block hash of the block information to fetch","required":" yes"}}]'),_e=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" The block information in JSON"}}]'),me=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" filter","type":" _String_","description":" Asset to fetch via filter, will filter contract or symbol fields","required":" yes"}}]'),ke=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" JSON array in response, asset information objects in JSON"}}]'),he=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" txid","type":" _String_","description":" Transaction ID of the transaction to fetch","required":" yes"}}]'),be=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" The transaction information in JSON"}}]'),ge=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" txid","type":" _String_","description":" Transaction ID of the transaction to fetch","required":" yes"}}]'),ve=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" The SPV proof in JSON"}}]'),Se=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXO&#39;s for","required":" yes"}},{"key":"2","data":{"name":" options","type":" ` Object`","description":" Optional queries based on  [  https://github.com/syscoin/blockbook/blob/master/docs/api.md#get-utxo ](https://github.com/syscoin/blockbook/blob/master/docs/api.md#get-utxo)"}}]'),je=JSON.parse('[{"key":"0","data":{"type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" UTXO object array"},"children":[{"key":"0-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"0-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"0-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"0-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"0-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"0-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"0-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"0-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"0-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"0-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"0-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"0-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"0-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"0-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"0-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"0-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"0-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"0-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]}]'),we=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" blocks","type":" _Number_","description":" How many blocks to estimate fee for","required":" yes"}},{"key":"2","data":{"name":" options","type":" ` Object`","description":" Optional queries based on  [  https://github.com/syscoin/blockbook/blob/master/docs/api.md#get-utxo ](https://github.com/syscoin/blockbook/blob/master/docs/api.md#get-utxo)"}}]'),xe=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" Fee object in JSON"}}]'),Ne=JSON.parse('[{"key":"0","data":{"name":" endPoint","type":" _String_","description":" Fully qualified URL which will take transaction information and respond with a signature or error on denial","required":" yes"}},{"key":"1","data":{"name":" txHex","type":" _String_","description":" Raw transaction hex","required":" yes"}}]'),Ae=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" JSON object in response, signature on success and error on denial of notarization"}}]'),Oe=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" _String_","description":" Fully qualified URL for blockbook","required":" yes"}}]'),Te=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" Provider object in JSON"}}]'),Be=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" An  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  in hex format"}}]'),Ie=JSON.parse('[{"key":"0","data":{"name":" keyPair","type":" ` Object`","description":" Bitcoinjs-lib key pair","required":" yes"}}]'),Ue=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" A P2WPKH address"}}]'),qe=JSON.parse('[{"key":"0","data":{"name":" pubKey","type":" _String_","description":" Bitcoinjs-lib public key","required":" yes"}}]'),Pe=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" A P2WPKH address"}}]'),De=JSON.parse('[{"key":"0","data":{"name":" tx","type":" [  _Transaction_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transaction)","description":" Bitcoinjs transaction","required":" yes"}}]'),Re=JSON.parse('[{"key":"0","data":{"type":" [  _Allocation_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#allocation) _Array_","description":" Array of allocation objects"}}]'),He=JSON.parse('[{"key":"0","data":{"name":" assetGuid","type":" _Number_","description":" GUID of the child token/asset","required":" yes"}}]'),Xe=JSON.parse('[{"key":"0","data":{"type":" [  _AssetIDs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetids)","description":" Object containing the base asset GUID and NFT ID"},"children":[{"key":"0-0","data":{"name":" baseAssetID","type":" _String_","description":" Asset GUID of the base asset"}},{"key":"0-1","data":{"name":" NFTID","type":" _String_","description":" NFT ID of the asset"}}]}]'),Ce=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The result object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]},{"key":"1","data":{"name":" assets","type":" ` ??????????`","description":" Asset objects that are evaluated for notarization, and if they do require notarization then fetch signatures via fetchNotarizationFromEndPoint()","required":" yes"}}]'),Me=JSON.parse('[{"key":"0","data":{"type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Asset map of objects requiring notarization or null if no notarization is required"},"children":[{"key":"0-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"0-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"0-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]}]'),Le=JSON.parse('[{"key":"0","data":{"name":" assetGuid","type":" _Number_","description":" GUID of the child token/asset","required":" yes"}}]'),Ve=JSON.parse('[{"key":"0","data":{"type":" _Number_","description":" Asset GUID of the base asset"}}]'),Je=JSON.parse('[{"key":"0","data":{"type":" _Buffer_","description":" The BIP32 root master fingerprint."}}]'),ze=JSON.parse('[{"key":"0","data":{"name":" outputs","type":" _Array_","description":" Transaction output array","required":" yes"}},{"key":"1","data":{"name":" memoHeader","type":" _String_","description":" Memo prefix, application specific. If not passed in just return the raw opreturn script if found."}}]'),Ge=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" Memo, or null if none exists"}}]'),Ee=JSON.parse('[{"key":"0","data":{"name":" script","type":" _Number_","description":" OP\\\\_RETURN script output","required":" yes"}},{"key":"1","data":{"name":" memoHeader","type":" _String_","description":" Memo prefix, application specific","required":" yes"}}]'),Fe=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" Memo, or null if none exists"}}]'),We=JSON.parse('[{"key":"0","data":{"name":" skipIncrement","type":" _Number_","description":" If we should not count the internal change index counter (if you want to get the same change address in the future)","required":" no"}}]'),Ke=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" An address used for change outputs"}}]'),Ze=JSON.parse('[{"key":"0","data":{"name":" skipIncrement","type":" _Number_","description":" If we should not count the internal change index counter (if you want to get the same change address in the future)","required":" no"}}]'),Ye=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" An address used for receiving outputs"}}]'),Qe=JSON.parse('[{"key":"0","data":{"name":" notaryAssets","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Asset objects that require notarization, fetch signatures via fetchNotarizationFromEndPoint()","required":" yes"},"children":[{"key":"0-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"0-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"0-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]},{"key":"1","data":{"name":" txHex","type":" _String_","description":" Signed transaction hex created from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"}}]'),$e=JSON.parse('[{"key":"0","data":{"type":" _Boolean_","description":" Representing if notarization was done by acquiring a witness signature from notary"}}]'),et=JSON.parse('[{"key":"0","data":{"type":" [  _BIP32Node_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32node)","description":" BIP32 root node representing the seed"},"children":[{"key":"0-0","data":{"name":" \\\\_\\\\_D","type":" _Buffer_","description":""}},{"key":"0-1","data":{"name":" \\\\_\\\\_Q","type":" _Buffer_","description":""}},{"key":"0-2","data":{"name":" chainCode","type":" _Buffer_","description":""}},{"key":"0-3","data":{"name":" network","type":" [  Network ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":""}},{"key":"0-4","data":{"name":" \\\\_\\\\_DEPTH","type":" _Number_","description":""}},{"key":"0-5","data":{"name":" \\\\_\\\\_INDEX","type":" _Number_","description":""}},{"key":"0-6","data":{"name":" \\\\_\\\\_PARENT\\\\_FINGERPRINT","type":" _Number_","description":""}},{"key":"0-7","data":{"type":" lowR","description":" _Boolean_"}}]}]'),tt=JSON.parse('[{"key":"0","data":{"name":" psbt","type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" The resulting PSBT object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]},{"key":"1","data":{"name":" notaryAssets","type":" ??????????","description":" Asset objects require notarization, fetch signatures via fetchNotarizationFromEndPoint()","required":" yes"}},{"key":"2","data":{"name":" rawTx","type":" _String_","description":""}}]'),st=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" PSBT output notarized along with index"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),nt=JSON.parse('[{"key":"0","data":{"name":" password","type":" _String_","description":" Decryption password to unlock seed phrase","required":" yes"}}]'),at=JSON.parse('[{"key":"0","data":{"type":" _Boolean_","description":" On success or fail of restore"}}]'),it=JSON.parse('[{"key":"0","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" The  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address to fetch UTXOs for","required":" yes"}},{"key":"1","data":{"name":" utxoObject","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Back-end provider UTXO JSON object to be sanitized","required":" yes"},"children":[{"key":"1-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"1-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"1-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"1-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"1-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"1-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"1-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"1-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"1-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"1-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"1-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"1-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"1-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"1-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"1-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"1-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"1-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"1-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"1-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"1-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"1-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"1-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"2","data":{"name":" network","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" Defaults to Syscoin Mainnet. Network to be used to create address for notary and auxfee payout address if those features exist for the asset","required":" no"},"children":[{"key":"2-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"2-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"2-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"2-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"2-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"2-5","data":{"type":" wif","description":" ` Hex`"}}]},{"key":"3","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" If this is passed in we use assetWhiteList field of options to skip over (if assetWhiteList is null) UTXOs if they use notarization for an asset that is not a part of assetMap","required":" no"},"children":[{"key":"3-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"3-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"3-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"3-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"4","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Destination outputs for a transaction requiring UTXO sanitizing, used in assetWhiteList, check described above","required":" no"},"children":[{"key":"4-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"4-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"4-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"4-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"5","data":{"name":" excludeZeroConf","type":" _Boolean_","description":" False by default. Filtering out 0 conf UTXO, new/update/send asset transactions must use confirmed inputs only as per Syscoin Core mempool policy","required":" no"}}]'),rt=JSON.parse('[{"key":"0","data":{"type":" [  _SanitizedUTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedutxos)","description":" Sanitized UTXO object for use internally in this library"},"children":[{"key":"0-0","data":{"name":" utxos","type":" [  _SanitizedUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedutxo) _Array_","description":""},"children":[{"key":"0-0-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-0-1","data":{"name":" address","type":" _String_","description":""}},{"key":"0-0-2","data":{"name":" txId","type":" _String_","description":""}},{"key":"0-0-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-0-4","data":{"name":" vout","type":" _Number_","description":""}},{"key":"0-0-5","data":{"name":" value","type":" _BN_","description":""}},{"key":"0-0-6","data":{"name":" locktime","type":"","description":""}},{"key":"0-0-7","data":{"type":" assetInfo","description":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)"},"children":[{"key":"0-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-1","data":{"name":" assets","type":" [  _SanitizedAssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedassetdetails) _Map_","description":" Mapped from asset GUIDs to  [  _SanitizedAssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#sanitizedassetdetails)  objects."},"children":[{"key":"0-1-0","data":{"name":" contract","type":" _Buffer_","description":" Hex buffer with the ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"0-1-1","data":{"name":" pubdata","type":" _Buffer_","description":" Hex buffer with the public data information of the token"}},{"key":"0-1-2","data":{"name":" maxsupply","type":" _BN_","description":" Maximum supply in sats"}},{"key":"0-1-3","data":{"name":" precision","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"0-1-4","data":{"name":" updatecapabilityflags","type":" _Number_","description":" Update capabilities on this asset"}}]}]}]'),ot=JSON.parse('[{"key":"0","data":{"name":" backendURL","type":" ` Object`","description":" Fully qualified URL for blockbook","required":" yes"}},{"key":"1","data":{"name":" txHex","type":" _Boolean_","description":" Raw transaction hex","required":" yes"}},{"key":"2","data":{"name":" Signer","type":" [  _Signer_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#Signer)","description":" Signer object if you wish to update change/receiving indexes from backend provider through  [  fetchBackendAccount() ](#fetchbackendaccount)"}}]'),dt=JSON.parse('[{"key":"0","data":{"type":" _String_","description":" Returns txid in response or error"}}]'),ct=JSON.parse('[{"key":"0","data":{"name":" accountIndex","type":" _Number_","description":" Account number to use","required":" yes"}}]'),pt=JSON.parse('[{"key":"0","data":{"name":" tokens","type":" _Array_","description":" [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  tokens from the provider response to  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  account details","required":" yes"}}]'),ut=JSON.parse('[{"key":"0","data":{"name":" rawHex","type":" _String_","description":" Raw transaction hex","required":" yes"}},{"key":"1","data":{"name":" memoHeader","type":" _String_","description":" Memo prefix, application specific","required":" yes"}},{"key":"2","data":{"name":" buffMemo","type":" _Buffer_","description":" Buffer memo to put into the transaction","required":" yes"}}]'),yt=JSON.parse('[{"key":"0","data":{"type":" [  _Transaction_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transaction)","description":" Returns the transaction with the memo appended to the inside of the OP\\\\_RETURN output, or null if not found"}}]'),ft=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]}]'),lt=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]},{"key":"1","data":{"name":" notaryAssets","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Asset objects that are required for notarization, fetch signatures via  [  fetchNotarizationFromEndPoint() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#fetchnotarizationfromendpoint)","required":" no"},"children":[{"key":"1-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"1-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"1-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]},{"key":"2","data":{"name":" Signer","type":" [  _Signer_ ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)","description":" Signer used to sign transaction","required":" no"}},{"key":"3","data":{"name":" pathIn","type":" _String_","description":" Custom HD BIP32 path useful if signing from a specific address like a multisig","required":" no"}}]'),_t=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A signed  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if successful or unsigned if it failed"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),mt=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]},{"key":"1","data":{"name":" Signer","type":" [  _Signer_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#Signer)","description":"","required":" yes"}},{"key":"2","data":{"name":" notaryAssets","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Asset objects that are required for notarization, fetch signatures via  [  fetchNotarizationFromEndPoint() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#fetchnotarizationfromendpoint)","required":" no"},"children":[{"key":"2-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"2-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"2-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]}]'),kt=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A signed  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if successful or unsigned if it failed"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),ht=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]},{"key":"1","data":{"name":" wif","type":" _String_","description":" Private key in  [  WIF ](https://en.bitcoin.it/wiki/Wallet_import_format)  format to sign inputs of the transaction for","required":" yes"}},{"key":"2","data":{"name":" notaryAssets","type":" [  _NotaryDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#notarydetails)","description":" Asset objects that are required for notarization, fetch signatures via  [  fetchNotarizationFromEndPoint() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#fetchnotarizationfromendpoint)","required":" no"},"children":[{"key":"2-0","data":{"name":" endpoint","type":" _String_","description":" Fully qualified URL of the notary endpoint. The endpoint will be sent a POST request with the transaction hex and some other details in a JSON object and requires a signature signing the transaction following notarization protocol"}},{"key":"2-1","data":{"name":" instanttransfers","type":" _Boolean_","description":" Default is 0 (false). Instant transfers by blocking double-spends from inputs. Since notarization is happening via API the API can block any double-spend attempts thereby allowing for instant transactions"}},{"key":"2-2","data":{"name":" hdrequired","type":" _Boolean_","description":" Default is 0 (false). If HD account  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  and  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)  information is required by the notary to verify change addresses belong to the sender account"}}]}]'),bt=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A signed  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if successful or unsigned if it failed"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),gt=JSON.parse('[{"key":"0","data":{"name":" psbt","type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" Partially signed transaction object","required":" yes"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]},{"key":"1","data":{"name":" pathIn","type":" _String_","description":" Custom HD BIP32 path useful if signing from a specific address like a multisig","required":" no"}}]'),vt=JSON.parse('[{"key":"0","data":{"type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  from bitcoinjs-lib"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),St=JSON.parse('[{"key":"0","data":{"name":" res","type":" [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)","description":" The resulting object passed in which is assigned from syscointx.createTransaction() / syscointx.createAssetTransaction()","required":" yes"},"children":[{"key":"0-0","data":{"name":" txVersion","type":" _Number_","description":" Transaction version number"}},{"key":"0-1","data":{"name":" inputs","type":" [  _ResInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#resinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" type","type":" _String_","description":""}},{"key":"0-1-1","data":{"name":" address","type":" _String_","description":" Syscoin address funds are being sent from"}},{"key":"0-1-2","data":{"name":" txId","type":" _String_","description":" Transaction ID"}},{"key":"0-1-3","data":{"name":" path","type":" _String_","description":""}},{"key":"0-1-4","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"0-1-5","data":{"name":" value","type":" _BN_","description":" Value of the transaction"}},{"key":"0-1-6","data":{"name":" locktime","type":" _Number_","description":" Raw locktime. Non-0 value also locktime-activates inputs"}},{"key":"0-1-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset to be sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"0-2","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-2-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-2-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-2-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-2-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-2-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-2-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-2-4","data":{"type":" script","description":" _Buffer_"}}]}]},{"key":"1","data":{"name":" wif","type":" ` ?????????`","description":" Private key in WIF format to sign inputs with","required":" yes"}},{"key":"2","data":{"name":" network","type":" [  _Network_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#network)","description":" bitcoinjs-lib Network object","required":" yes"},"children":[{"key":"2-0","data":{"name":" messagePrefix","type":" _String_","description":""}},{"key":"2-1","data":{"name":" bech32","type":" _String_","description":""}},{"key":"2-2","data":{"name":" bip32","type":" [  _BIP32_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#bip32)","description":""}},{"key":"2-3","data":{"name":" pubKeyHash","type":" ` Hex`","description":""}},{"key":"2-4","data":{"name":" scriptHash","type":" ` Hex`","description":""}},{"key":"2-5","data":{"type":" wif","description":" ` Hex`"}}]}]'),jt=JSON.parse('[{"key":"0","data":{"name":" psbt","type":" [  _PSBT_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  from bitcoinjs-lib"},"children":[{"key":"0-0","data":{"name":" inputs","type":" [  _PSBTInput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbtinput) _Array_","description":" Inputs for the transaction"},"children":[{"key":"0-0-0","data":{"name":" unknownKeyVals","type":" [  _UnknownKeyValue_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#unknownkeyvalue)","description":""},"children":[{"key":"0-0-0-0","data":{"name":" key","type":" _Buffer_","description":""}},{"key":"0-0-0-1","data":{"type":" value","description":" _Buffer_"}}]},{"key":"0-0-1","data":{"name":" witnessUtxo","type":" [  _WitnessUTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#witnessutxo)","description":""},"children":[{"key":"0-0-1-0","data":{"name":" script","type":" _Buffer_","description":""}},{"key":"0-0-1-1","data":{"type":" value","description":" _BN_"}}]},{"key":"0-0-2","data":{"type":" finalScriptWitness","description":" _Buffer_"}}]},{"key":"0-1","data":{"name":" outputs","type":" [  _Output_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#output) _Array_","description":" Outputs for the transaction"},"children":[{"key":"0-1-0","data":{"name":" address","type":" _String_","description":" Address the funds will be sent to"}},{"key":"0-1-1","data":{"name":" value","type":" _BN_","description":" Value of funds to send"}},{"key":"0-1-2","data":{"name":" changeIndex","type":" _Number_","description":""}},{"key":"0-1-3","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information of an asset sent in the transaction"},"children":[{"key":"0-1-3-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"0-1-3-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]},{"key":"0-1-4","data":{"type":" script","description":" _Buffer_"}}]},{"key":"0-2","data":{"type":" globalMap","description":" ` Object`"}}]}]'),wt=JSON.parse('[{"key":"0","data":{"name":" txOpts","type":" [  _TransactionOptions_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#transactionoptions)","description":" Transaction options","required":" no"},"children":[{"key":"0-0","data":{"name":" rbf","type":" _Boolean_","description":" Replace-by-fee, enables a token to use the high-speed Z-DAG protocol. Should be false for SYS transactions"}},{"key":"0-1","data":{"name":" memo","type":" _String_","description":" Text message/Memo to be included with the transaction"}},{"key":"0-2","data":{"name":" memoHeader","type":" _String_","description":" Header of the memo"}},{"key":"0-3","data":{"name":" assetWhiteList","type":" _Map_","description":" Allows UTXOs to be added from assets in the whitelist or the asset being sent"}}]},{"key":"1","data":{"name":" assetMap","type":" [  _AssetOutputs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutputs) _Map_","description":" Mapping of asset GUIDs to their desired outputs","required":" yes"},"children":[{"key":"1-0","data":{"name":" changeAddress","type":" _String_","description":" The change address where the left over amount should be sent to"}},{"key":"1-1","data":{"name":" outputs","type":" [  _AssetOutput_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetoutput) _Array_","description":" An array of outputs containing which address to send the asset to and the value to send"},"children":[{"key":"1-1-0","data":{"name":" value","type":" _BN_","description":" The amount of the asset to send"}},{"key":"1-1-1","data":{"name":" address","type":" _String_","description":" Address to send the asset to"}}]}]},{"key":"2","data":{"name":" sysChangeAddress","type":" _String_","description":" Change address if defined is where Syscoin only change outputs are sent to. If not defined and  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is defined then a new change address will be automatically created using the next available change address index in the  [  HD path ](https://learnmeabitcoin.com/technical/derivation-paths)","required":" no"}},{"key":"3","data":{"name":" feeRate","type":" _BN_","description":" Defaults to 10 satoshi per byte. How many satoshi per byte the network fee should be paid out as","required":" no"}},{"key":"4","data":{"name":" sysFromXpubOrAddress","type":" _String_","description":" If wanting to fund from a specific  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address this field should be set","required":" no"}},{"key":"5","data":{"name":" utxos","type":" [  _UTXOs_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxos)","description":" Pass in specific UTXOs to fund a transaction, should be sanitized using  [  utils.sanitizeBlockbookUTXOs() ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#sanitizeblockbookutxos)","required":" no"},"children":[{"key":"5-0","data":{"name":" utxos","type":" [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo) _Array_","description":" Inputs/outputs of the transaction"},"children":[{"key":"5-0-0","data":{"name":" txid","type":" _String_","description":" Transaction ID"}},{"key":"5-0-1","data":{"name":" vout","type":" _Number_","description":" Output number"}},{"key":"5-0-2","data":{"name":" value","type":" _String_","description":" Value being transferred"}},{"key":"5-0-3","data":{"name":" height","type":" _Number_","description":" Block height"}},{"key":"5-0-4","data":{"name":" confirmations","type":" _Number_","description":" Number of confirmations"}},{"key":"5-0-5","data":{"name":" address","type":" _String_","description":" Address the funds are being/have been sent to"}},{"key":"5-0-6","data":{"name":" path","type":" _String_","description":""}},{"key":"5-0-7","data":{"name":" assetInfo","type":" [  _AssetInfo_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetinfo)","description":" Information on an asset included in the UTXO"},"children":[{"key":"5-0-7-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-0-7-1","data":{"name":" value","type":" _BN_  /  _String_","description":" Value transferred. Type will be  _BN_  if within a  [  _Res_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#res)  object,  _String_  if within a  [  _UTXO_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#utxo)  object"}}]}]},{"key":"5-1","data":{"name":" assets","type":" [  _AssetDetails_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#assetdetails) _Array_","description":" Details of any assets involved in the transaction"},"children":[{"key":"5-1-0","data":{"name":" assetGuid","type":" _String_","description":" Unique, numeric identifier of the token generated on creation"}},{"key":"5-1-1","data":{"name":" contract","type":" _String_","description":" ERC20 address of the contract connected to this SPT for use in the SysEthereum bridge"}},{"key":"5-1-2","data":{"name":" symbol","type":" _String_","description":" Token symbol (in base64)"}},{"key":"5-1-3","data":{"name":" pubData","type":" [  _AssetPublicData_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#publicdata)","description":" Public data information of the token"},"children":[{"key":"5-1-3-0","data":{"name":" desc","type":" _String_","description":" Base64 encoded string describing the token"}}]},{"key":"5-1-4","data":{"name":" totalSupply","type":" _String_","description":" Total current issued supply"}},{"key":"5-1-5","data":{"name":" maxSupply","type":" _String_","description":" Maximum supply in sats"}},{"key":"5-1-6","data":{"name":" decimals","type":" _Number_","description":" Number of digits of precision for the token"}},{"key":"5-1-7","data":{"name":" updateCapabilityFlags","type":" _Number_","description":" Update capabilities on this asset"}}]},{"key":"5-2","data":{"name":" addressOrXpub","type":" _String_","description":" An address or  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  to fetch UTXOs for"}}]},{"key":"6","data":{"name":" redeemOrWitnessScript","type":" _String_","description":" Redeem script for P2SH and witnessScript for P2WSH spending conditions","required":" no"}}]'),xt=JSON.parse('[{"key":"0","data":{"type":" ` Object`","description":" A  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  if the  [  Signer ](/docs/dev-resources/documentation/javascript-sdk-ref/utils#Signer)  is set or a result object (res) which is used to create a  [  PSBT ](/docs/dev-resources/documentation/javascript-sdk-ref/types#psbt)  and sign/send if an  [  _xPub_ ](/docs/dev-resources/documentation/javascript-sdk-ref/types#xpub)  or address are passed in to the fund transaction"}}]')},50482:(e,t,s)=>{s.r(t),s.d(t,{default:()=>D,frontMatter:()=>I,metadata:()=>U,toc:()=>q});var n=s(87462),a=s(67294),i=s(3905),r=s(89262),o=s(99752),d=s(48551),c=s(10988),p=s(80585),u=s(96163),y=s(35964),f=s(40770),l=s(5235);var _,m,k=s(61127),h=s(5852),b=s(90449),g=s(39900),v=s(89872),S=s(61610),j=s(54545),w=s(98741),x=s(5160),N=s(98510),A=s(75408),O=s(81099);s(66367);function T(){return T=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}return e},T.apply(this,arguments)}const B=function(e){let{title:t,titleId:s,...n}=e;return a.createElement("svg",T({viewBox:"0 0 2500 2500",xmlns:"http://www.w3.org/2000/svg",width:2500,height:2500,"aria-labelledby":s},n),t?a.createElement("title",{id:s},t):null,_||(_=a.createElement("path",{d:"M0 0h2500v2500H0z",fill:"#c00"})),m||(m=a.createElement("path",{d:"M1241.5 268.5h-973v1962.9h972.9V763.5h495v1467.9h495V268.5z",fill:"#fff"})))},I={sidebar_position:3},U={unversionedId:"dev-resources/documentation/javascript-sdk-ref/syscoinjs",id:"dev-resources/documentation/javascript-sdk-ref/syscoinjs",isDocsHomePage:!1,title:"Syscoinjs-lib",description:"A Javascript library for utilising Syscoin blockchain operations in node.js and browsers.",source:"@site/docs/dev-resources/documentation/javascript-sdk-ref/syscoinjs.mdx",sourceDirName:"dev-resources/documentation/javascript-sdk-ref",slug:"/dev-resources/documentation/javascript-sdk-ref/syscoinjs",permalink:"/docs/dev-resources/documentation/javascript-sdk-ref/syscoinjs",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/dev-resources/documentation/javascript-sdk-ref/overview"},next:{title:"Utils",permalink:"/docs/dev-resources/documentation/javascript-sdk-ref/utils"}},q=[{value:"assetAllocationBurn",id:"assetallocationburn",children:[]},{value:"assetAllocationMint",id:"assetallocationmint",children:[]},{value:"assetAllocationSend",id:"assetallocationsend",children:[]},{value:"assetNew",id:"assetnew",children:[]},{value:"assetSend",id:"assetsend",children:[]},{value:"assetUpdate",id:"assetupdate",children:[]},{value:"createPSBTFromRes",id:"createpsbtfromres",children:[]},{value:"createTransaction",id:"createtransaction",children:[]},{value:"fetchAndSanitizeUTXOs",id:"fetchandsanitizeutxos",children:[]},{value:"signAndSend",id:"signandsend",children:[]},{value:"signAndSendWithSigner",id:"signandsendwithsigner",children:[]},{value:"signAndSendWithWIF",id:"signandsendwithwif",children:[]},{value:"Syscoin",id:"syscoin",children:[]},{value:"syscoinBurnToAssetAllocation",id:"syscoinburntoassetallocation",children:[]}],P={toc:q};function D(e){let{components:t,...s}=e;return(0,i.kt)("wrapper",(0,n.Z)({},P,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{href:"https://github.com/syscoin/syscoinjs-lib"},(0,i.kt)("i",{className:"pi pi-github",style:{fontSize:"2em"}})),(0,i.kt)("a",{href:"https://www.npmjs.com/package/syscoinjs-lib"},(0,i.kt)(B,{width:"2rem",height:"2rem",mdxType:"NpmIcon"}))),(0,i.kt)("p",null,"A Javascript library for utilising Syscoin blockchain operations in node.js and browsers."),(0,i.kt)("p",null,"This documentation is currently a WIP. Please let us know if you notice any typos or have any ideas for improvement."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assetallocationburn"},"assetAllocationBurn"),(0,i.kt)("h5",{id:"assetallocationburn-assetopts-txopts-assetmap-syschangeaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"assetAllocationBurn( assetOpts, txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Burn an asset allocation for the purpose of provably burning. Could be used to create proof-of-burn for SysNEVM bridge by specifying the NEVM address as the destination in assetOpts."),(0,i.kt)(r.Z,{paramTable:o.x6,returnTable:o.ri,examples:[d.Z,c.Z],anchor:"#assetallocationburn",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assetallocationmint"},"assetAllocationMint"),(0,i.kt)("h5",{id:"assetallocationmint-assetopts-txopts-assetmap-syschangeaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"assetAllocationMint( assetOpts, txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Mint a new asset using proof-of-lock on NEVM chain as a proof to mint tokens on Syscoin."),(0,i.kt)(r.Z,{paramTable:o.pR,returnTable:o.kG,examples:[p.Z,u.Z],anchor:"#assetallocationmint",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assetallocationsend"},"assetAllocationSend"),(0,i.kt)("h5",{id:"assetallocationsend-txopts-assetmap-syschangeaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"assetAllocationSend( txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Send an asset allocation to other users. Once the assetSend() function has been used to issue a token to an address this function is then used to send the tokens."),(0,i.kt)(r.Z,{paramTable:o.MP,returnTable:o.OK,examples:[y.Z,f.Z,l.Z,"```js\nasync function transferAssetFundedByMultisig() {\n  const mnemonic1 = 'bicycle lucky earn primary wasp ranch dinner gravity property tenant gospel nephew soul cruise tool'\n  const HDSigner1 = new sjs.utils.HDSigner(mnemonic1, null, true)\n  // create key pair of the current receiving index and get its path right after that to pass in to signing\n  // you can also pass in an index into this function to create a specific receiving index key and then also pass it in to getHDPath to get its path as well\n  hdSignerKP = await HDSigner.createKeypair()\n  const hdSignerPath = HDSigner.getHDPath()\n  hdSigner1KP = await HDSigner1.createKeypair()\n  const hdSignerPath1 = HDSigner1.getHDPath()\n  const p2ms = sjs.utils.bitcoinjs.payments.p2ms({\n    m: 2, pubkeys: [\n      hdSignerKP.publicKey,\n      hdSigner1KP.publicKey,\n    ], network: HDSigner.Signer.network})\n  const addressMS = sjs.utils.bitcoinjs.payments.p2wsh({\n    redeem: p2ms\n  })\n  // if SYS need change sent, set this address. null to let HDSigner find a new address for you\n  const sysChangeAddress = null\n  const feeRate = new sjs.utils.BN(10)\n  const txOpts = { rbf: true }\n  // send some gas to the multisig\n  const outputsArr = [\n    { address: addressMS.address, value: new sjs.utils.BN(10000000) }\n  ]\n  const assetguid = '341906151'\n  // if assets need change sent, set this address. null to let HDSigner find a new address for you\n  const assetChangeAddress = null\n  let psbt = await syscoinjs.createTransaction(txOpts, sysChangeAddress, outputsArr, feeRate)\n  if (!psbt) {\n    console.log('Could not create transaction, not enough funds?')\n  }\n\n  // send some asset to the multisig\n  let assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(6000), address: addressMS.address }] }]\n  ])\n  let result = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate)\n  if (!result) {\n    console.log('Could not create transaction, not enough funds?')\n    return\n  }\n  console.log('Waiting for 10 seconds so we can spend the multisig(wait for 1 block)...')\n  await sleep(10000);\n  // now spend the asset from the multisig\n  assetMap = new Map([\n    [assetguid, { changeAddress: assetChangeAddress, outputs: [{ value: new sjs.utils.BN(5000), address: 'tsys1qk0mrytgd06tc4rdtcs7h6nvx9ph67rjavv7qx6' }] }]\n  ])\n  const sysFromXpubOrAddress = [addressMS.address]\n  result = await syscoinjs.assetAllocationSend(txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress, null, p2ms.output)\n  if (!result) {\n    console.log('Could not create transaction, not enough funds?')\n    return\n  }\n  // this should add signature with 0th index path in HDSigner\n  psbt = await syscoinjs.signAndSend(result.psbt, result.assets, null, hdSignerPath)\n  // this should add second signature with 0th index path in HDSigner1\n  await syscoinjs.signAndSend(psbt, result.assets, HDSigner1, hdSignerPath1)\n}",k.Z,h.Z],anchor:"#assetallocationsend",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assetnew"},"assetNew"),(0,i.kt)("h5",{id:"assetnew-assetopts-txopts-syschangeaddress-sysreceivingaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"assetNew( assetOpts, txOpts, sysChangeAddress, sysReceivingAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Create new Syscoin Platform Token (SPT)."),(0,i.kt)(r.Z,{paramTable:o.IM,returnTable:o.WO,examples:[b.Z],anchor:"#assetnew",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assetsend"},"assetSend"),(0,i.kt)("h5",{id:"assetsend-txopts-assetmap-syschangeaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"assetSend( txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Issue supply by sending it from asset to an address holding an allocation of the asset."),(0,i.kt)(r.Z,{paramTable:o.II,returnTable:o.vu,examples:[g.Z,v.Z,S.Z],anchor:"#assetsend",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assetupdate"},"assetUpdate"),(0,i.kt)("h5",{id:"assetupdate-assetguid-assetopts-txopts-assetmap-syschangeaddress-sysreceivingaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"assetUpdate( assetGuid, assetOpts, txOpts, assetMap, sysChangeAddress, sysReceivingAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Update an existing Syscoin Platform Token (SPT)."),(0,i.kt)(r.Z,{paramTable:o.R5,returnTable:o.S7,examples:[j.Z,w.Z,x.Z],anchor:"#assetupdate",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createpsbtfromres"},"createPSBTFromRes"),(0,i.kt)("h5",{id:"createpsbtfromres-res-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"createPSBTFromRes( res, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Crafts a PSBT from a res object. Detects witness/non-witness UTXOs and sets appropriate data required for bitcoinjs-lib to sign properly."),(0,i.kt)(r.Z,{paramTable:o.X9,returnTable:o.Jf,anchor:"#createpsbtfromres",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createtransaction"},"createTransaction"),(0,i.kt)("h5",{id:"createtransaction-txopts-changeaddress-outputsarr-feerate-fromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"createTransaction( txOpts, changeAddress, outputsArr, feeRate, fromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"This function is used to send Syscoin or Bitcoin or like coins."),(0,i.kt)(r.Z,{paramTable:o._X,returnTable:o.E2,examples:[N.Z,A.Z],anchor:"#createtransaction",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetchandsanitizeutxos"},"fetchAndSanitizeUTXOs"),(0,i.kt)("h5",{id:"fetchandsanitizeutxos-utxos-fromxpuboraddress-txopts-assetmap-excludezeroconf-"},(0,i.kt)("em",{parentName:"h5"},"fetchAndSanitizeUTXOs( utxos, fromXpubOrAddress, txOpts, assetMap, excludeZeroConf )")),(0,i.kt)("p",null,"Fetch UTXO's for an address or ",(0,i.kt)("a",{parentName:"p",href:"types/#xpub"},"xPub")," from back-end Blockbook provider and sanitize them for use by upstream libraries."),(0,i.kt)(r.Z,{paramTable:o.lG,returnTable:o.wX,anchor:"#fetchandsanitizeutxos",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"signandsend"},"signAndSend"),(0,i.kt)("h5",{id:"signandsend-res-notaryassets-"},(0,i.kt)("em",{parentName:"h5"},"signAndSend( res, notaryAssets )")),(0,i.kt)("p",null,"Signs and Notarizes if necessary and sends a transaction to the network using ",(0,i.kt)("a",{parentName:"p",href:"utils/#Signer"},"Signer"),"."),(0,i.kt)(r.Z,{paramTable:o.vZ,returnTable:o.ig,anchor:"#signandsend",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"signandsendwithsigner"},"signAndSendWithSigner"),(0,i.kt)("h5",{id:"signandsendwithsigner-res-signer-notaryassets-"},(0,i.kt)("em",{parentName:"h5"},"signAndSendWithSigner( res, Signer, notaryAssets )")),(0,i.kt)("p",null,"Signs and Notarizes if necessary and sends a transaction to the network using ",(0,i.kt)("a",{parentName:"p",href:"utils/#Signer"},"Signer"),"."),(0,i.kt)(r.Z,{paramTable:o.PQ,returnTable:o.BH,anchor:"#signandsendwithSigner",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"signandsendwithwif"},"signAndSendWithWIF"),(0,i.kt)("h5",{id:"signandsendwithwif-res-wif-notaryassets-"},(0,i.kt)("em",{parentName:"h5"},"signAndSendWithWIF( res, wif, notaryAssets )")),(0,i.kt)("p",null,"Signs and Notarizes if necessary and sends a transaction to the network using ",(0,i.kt)("a",{parentName:"p",href:"utils/#Signer"},"Signer"),"."),(0,i.kt)(r.Z,{paramTable:o.mT,returnTable:o.eB,examples:[A.Z],anchor:"#signandsendwithwif",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"syscoin"},"Syscoin"),(0,i.kt)("h5",{id:"syscoin-signer-blockbookurl-network-"},(0,i.kt)("em",{parentName:"h5"},"Syscoin( Signer, blockbookURL, network )")),(0,i.kt)("p",null,"Constructor."),(0,i.kt)("p",null,"Top level object used by consuming libraries to craft Syscoin/Bitcoin transactions. For Syscoin SPT support is provided."),(0,i.kt)(r.Z,{paramTable:o.Ys,anchor:"#syscoin",mdxType:"ShowInfoComponent"}),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"syscoinburntoassetallocation"},"syscoinBurnToAssetAllocation"),(0,i.kt)("h5",{id:"syscoinburntoassetallocation-txopts-assetmap-syschangeaddress-feerate-sysfromxpuboraddress-utxos-redeemorwitnessscript-"},(0,i.kt)("em",{parentName:"h5"},"syscoinBurnToAssetAllocation( txOpts, assetMap, sysChangeAddress, feeRate, sysFromXpubOrAddress, utxos, redeemOrWitnessScript )")),(0,i.kt)("p",null,"Burn Syscoin to mint SYSX."),(0,i.kt)(r.Z,{paramTable:o.y2,returnTable:o.ic,examples:[O.Z],anchor:"#syscoinburntoassetallocation",mdxType:"ShowInfoComponent"}))}D.isMDXComponent=!0}}]);